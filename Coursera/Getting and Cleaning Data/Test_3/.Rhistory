set.seed(13435)
x <- data.frame("varl"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15))
View(x)
x <- x[sample(1:5),];x$var2[c(1,3)]=NA
View(x)
View(x)
View(x)
x[(x$varl<=3 & x$var3>11),]
x[(x$varl<=3 | x$var3>15),]
x[which(x$var2>8),]
sort(x$varl)
sort(x$varl,decreasing = TRUE)
sort(x$var2,na.last = TRUE)
x[order(x$varl),]
library(plyr)
arrange(x,var1)
arrange(x,x$varl)
arrange(x,desc)
arrange(x,desc(x$varl))
x$var4 <- rnorm(5)
y <- cbind(x,rnorm(5))
View(y)
source('G:/Coursera/Getting and Cleaning Data/Test_3/baltimore_restaurant.R')
restData <- read.csv("./data/restaurant.csv")
restData <- read.csv("./data/restaurant.csv")
if(!file.exists("./data")){
dir.create("./data")
}
fileUrl <- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl, destfile = "./data/restaurant.csv", method = "curl")
restData <- read.csv("./data/restaurant.csv")
download.file(fileUrl, destfile = "./data/restaurant.csv")
source('G:/Coursera/Getting and Cleaning Data/Test_3/baltimore_restaurant.R')
View(restData)
head(restData,n=3)
tail(restData,n=3)
summary(restData)
str(restData)
quantile(restData$councilDistrict,na.rm = TRUE)
quantile(restData$councilDistrict,probs = c(0.5,0.75,0.9))
table
table(restData$zipCode,useNA = "ifany")
table(restData$councilDistrict,restData$zipCode)
sum(is.na(restData$councilDistrict))
any(is.na(restData$councilDistrict))
all(restData$zipCode>0)
colSums(is.na(restData))
all(colSums(is.na(restData))==0)
any(restData$councilDistrict==2)
table(restData$zipCode %in% c("21212","21213"))
restData[restData$zipCode %in% c("21212","21213"),]
data("UCBAdmissions")
DF = as.data.frame(UCBAdmissions)
summary(DF)
View(DF)
xt <- xtabs
xt <- xtabs(Freq~Gender+Admit,data=DF)
xt
warpbreaks$replicate <- rep(1:9, len=54)
View(warpbreaks)
xt = xtabs(breaks~.,data=warpbreaks)
xt
ftable(xt)
fakeData = rnorm(1e5)
object.size(fakeData)
print(object.size(fakeData),units = "Mb")
s1 <- seq(1,10,by=2);s1
s2 <- seq(1,10,length=3);s2
x <- c(1,3,8,25,100); seq(along = x)
s2 <- seq(1,10,length=3);s2
s2 <- seq(1,10,length=7);s2
restData$nearME = restData$neighborhood %in% c("Roland Park", "Homeland")
table(restData$nearMe)
View(restData)
table(restData$nearMe)
restData$nearMe = restData$neighborhood %in% c("Roland Park", "Homeland")
table(restData$nearMe)
restData$zipWrong = ifelse(restData$zipCode<0, TRUE, FALSE)
table(restData$zipWrong, restData$zipCode<0)
restData$zipGroups = cut(restData$zipCode, breaks = quantile(restData$zipCode))
table(restData$zipGroups)
quantile(restData$zipCode)
table(restData$zipGroups, restData$zipCode)
install.packages("Hmisc")
library(Hmisc)
restData$zipGroups = cut2(restData$zipCode, g=4)
table(restData$zipGroups)
restData$zcf <- factor(restData$zipCode)
restData$zcf[1:10]
class(restData$zcf)
yesno <- sample(c("yes","no"),size=10,replace=TRUE)
yesnofac = factor(yesno, levels = c("yes","no"))
relevel(yesnofac, ref="yes")
yesnofac
yesno
as.numeric(yesnofac)
relevel(yesnofac, ref="no")
as.numeric(yesnofac)
restData$zipGroups = cut2(restData$zipCode, g=4)
table(restData$zipGroups)
class(restData$zipGroups)
restData$zipGroups = cut(restData$zipCode, breaks = quantile(restData$zipCode))
table(restData$zipGroups)
class(restData$zipGroups)
restData$zipGroups = cut2(restData$zipCode, g=4)
table(restData$zipGroups)
install.packages("plyr")
install.packages("plyr")
library(plyr)
install.packages("plyr")
library(plyr)
library(plyr)
restData2 = mutate(restData, zipGroups = cut2(zipCode, g=4))
table(restData2$zipGroups)
library(Hmisc);library(plyr)
library(Hmisc);library(plyr)
restData2 = mutate(restData, zipGroups = cut2(zipCode, g=4))
table(restData2$zipGroups)
View(restData2)
library(reshape2)
library(reshape2)
head(mtcars)
mtcars$carname = rownames(mtcars)
View(mtcars)
carMelt = melt(mtcars, id=c("carname","gear","cyl"), measure.vars = c("mpg","hp"))
View(carMelt)
tail(carMelt,n=3)
cylData <- dcast(carMelt,cyl~variable)
cylData
View(cylData)
cylData <- dcast(carMelt,cyl~variable,mean)
cylData
head(InsectSprays)
tapply(InsectSprays$count, InsectSprays$spray, sum)
spIns = split(InsectSprays$count, InsectSprays$spray)
spIns
sprCount = lapply(spIns, sum)
sprCount
sprCount = lapply(spIns, sum)
sprCount
unlist(sprCount)
#or:
sapply(spIns, sum)
ddply(InsectSprays, .(spray), summarize, sum=sum(count))
library(plyr)
ddply(InsectSprays, .(spray), summarize, sum=sum(count))
?ddply
ddply(InsectSprays, .(spray), summarize, sum=sum(count))
ddply(InsectSprays, .(spray), summarize, sum=ave(count, FUN = sum))
?summarize
library(plyr)
ddply(InsectSprays, .(spray), summarize, sum=sum(count))
#creating a new variable
spraySums = ddply(InsectSprays, .(spray), summarize, sum=ave(count, FUN = sum))
dim(spraySums)
ddply(InsectSprays, .(spray), summarize, sum=sum(count))
dfx <- data.frame(
group = c(rep('A', 8), rep('B', 15), rep('C', 6)),
sex = sample(c("M", "F"), size = 29, replace = TRUE),
age = runif(n = 29, min = 18, max = 54)
)
View(dfx)
ddply(dfx, .(group, sex), summarize,
mean = round(mean(age), 2),
sd = round(sd(age), 2))
?summarize
library(plyr)
?summarize
library(plyr)
ddply(InsectSprays, .(spray), summarize, sum=sum(count))
(plyr::summarize)
ddply(InsectSprays, .(spray), plyr::summarize, sum=sum(count))
?summarize
spraySums = ddply(InsectSprays, .(spray), plyr::summarize, sum=ave(count, FUN = sum))
dim(spraySums)
View(spraySums)
dim(InsectSprays)
View(InsectSprays)
install.packages(dplyr)
install.packages("dplyr")
library(dplyr)
chicago <- readRDS("chicago.rds")
chicago <- readRDS("chicago.rds")
names(chicago)
View(chicago)
head(select(chicago, city:dptp))
head(select(chicago, -(city:dptp)))
i <- match("city", names(chicago))
j <- match("dptp", names(chicago))
head(chicago[, -(i:j)])
chic.f <- filter(chicago, pm25tmean2 > 30)
View(chic.f)
head(select(chic.f, 1:3, pm25tmean2), 10)
chic.f <- filter(chicago, pm25tmean2 > 30 & tmpd > 80)
View(chic.f)
chicago <- arrange(chicago, date)
chicago <- aarrange(chicago, desc(date))
chicago <- arrange(chicago, desc(date))
chicago <- rename(chicago, pm25 = pm25tmean2, dewpoint = dptp)
chicago <- mutate(chicago, pm25detrend = pm25 - mean(pm25, na.rm = TRUE))
chicago <- mutate(chicago, tempcat = factor(1*(temp>80), labels = c("cold","hot")))
chicago <- mutate(chicago, tempcat = factor(1*(tmpd>80), labels = c("cold","hot")))
a = 1*(tmpd>80)
a = 1*(chicago$tmpd>80)
b = chicago$tmpd>80
hotcold <- group_by(chicago, tempcat)
View(hotcold)
no2 = median(no2tmean2))
summarize(hotcold, pm25 = mean(pm25, na.rm = TRUE),
o3 = max(o3tmean2),
no2 = median(no2tmean2))
chicago <- mutate(chicago, year = as.POSIXlt(date)$year + 1900)
chicago <- mutate(chicago, year = as.POSIXlt(date)$year + 1900)
years <- group_by(chicago, year)
summarize(years, pm25 = mean(pm25, na.rm = TRUE),
o3 = max(o3tmean2, na.rm = TRUE),
no2 = median(no2tmean2, na.rm = TRUE))
chicago %>% mutate(month = as.POSIXlt(date)$mon + 1)
%>% group_by(month)
%>% summarize(pm25 = mean(pm25, na.rm = TRUE),
o3 = max(o3tmean2, na.rm = TRUE),
no2 = median(no2tmean2, na.rm = TRUE))
chicago %>% mutate(month = as.POSIXlt(date)$mon + 1) %>% group_by(month) %>% summarize(pm25 = mean(pm25, na.rm = TRUE),
o3 = max(o3tmean2, na.rm = TRUE),
no2 = median(no2tmean2, na.rm = TRUE))
source('G:/Coursera/Getting and Cleaning Data/Test_3/merging-data.R')
View(reviews)
View(solutions)
names(reviews); names(solutions)
mergedData = merge(reviews, solutions, by.x = "solution_id", by.y = "id", all = TRUE)
head(mergedData)
View(mergedData)
intersect(names(solutions), names(reviews))
mergedData2 = merge(reveiws, solutions, all=TRUE)
head(mergedData2)
intersect(names(solutions), names(reviews))
mergedData2 = merge(reviews, solutions, all=TRUE)
head(mergedData2)
library(plyr)
library(plyr)
df1 = data.frame(id=sample(1:10), x=rnorm(10))
df2 = data.frame(id=sample(1:10), y=rnorm(10))
arrange(join(df1, df2), id)
View(df1)
View(df2)
df1 = data.frame(id=sample(1:10), x=rnorm(10))
df2 = data.frame(id=sample(1:10), y=rnorm(10))
df3 = data.frame(id=sample(1:10), z=rnorm(10))
dfList = list(df1,df2,df3)
join_all(dfList)
fileUrl="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./data/reviews.csv")
housing = read.csv("./data/reviews.csv")
View(housing)
fileUrl1 = "https://dl.dropboxusercontent.com/u/7710864/data/reviews-apr29.csv"
fileUrl2 = "https://dl.dropboxusercontent.com/u/7710864/data/solutions-apr29.csv"
download.file(fileUrl1, destfile = "./data/reviews.csv")
download.file(fileUrl2, destfile = "./data/solutions.csv")
reviews = read.csv("./data/reviews.csv")
solutions = read.csv("./data/solutions.csv")
download.file(fileUrl, destfile = "./data/housing.csv")
housing = read.csv("./data/housing.csv")
View(housing)
names(housing)
agricultureLogical = housing$ACR==3 & housing$AGS==6
agriculture = housing[which(agricultureLogical),]
View(agriculture)
install.packages("jpeg")
library(jpeg)
?jpeg
library(help = jpeg)
?readJPEG
jeff = readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile = "./data/jeff.jpg")
jeff = readJPEG("./data/jeff.jpg", native = TRUE)
quantile(jeff,probs = c(0.3,0.8))
jeeff
summary(jeff)
jeff = readJPEG("./data/getdata-jeff.jpg", native = TRUE)
quantile(jeff,probs = c(0.3,0.8))
library(help = jpeg)
url1 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url2 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url1,destfile = "./data/product.csv")
download.file(url2,destfile = "./data/edu.csv")
product = read.csv("./data/product.csv")
edu = read.csv("./data/edu.csv")
View(edu)
View(product)
mergedData = merge(product, edu, by.x = "X", by.y = "CountryCode", all = TRUE)
View(mergedData)
?merge
mergedData = merge(product, edu, by.x = "X", by.y = "CountryCode", all = FALSE)
mergedData = merge(product, edu, by.x = "X", by.y = "CountryCode", all.y = TRUE)
names(product)
mergedData = arrange(mergedData, desc(Gross.domestic.product.2012))
mergedData = merge(product, edu, by.x = "X", by.y = "CountryCode", all = FALSE)
mergedData = arrange(mergedData, desc(Gross.domestic.product.2012))
mergedData = merge(product, edu, by.x = "X", by.y = "CountryCode", all.y = TRUE)
class(mergedData$Income.Group)
mg <- group_by(mergedData, Income.Group)
summarize(mg, averrank=mean(Gross.domestic.product.2012, na.rm = TRUE))
mergedData = merge(product, edu, by.x = "X", by.y = "CountryCode", all.y = TRUE, all.x = FALSE)
class(mergedData$Gross.domestic.product.2012)
summarize(mg, averrank=mean(as.numeric(Gross.domestic.product.2012), na.rm = TRUE))
library(Hmisc)
mergedData$rankgroups = cut2(mergedData$Gross.domestic.product.2012, g=5)
mergedData$rankgroups = cut2(as.numeric(mergedData$Gross.domestic.product.2012), g=5)
table(mergedData$rankgroups,mergedData$Income.Group)
table(mergedData$Income.Group,mergedData$rankgroups)
product1 = product[which(!is.na(product))]
product1 = product[which(!is.na(product$X)),]
View(product1)
product1 = product[which(product$X != ""),]
mergedData = merge(edu,product1,by.x = "CountryCode",by.y = "X",all = FALSE)
View(mergedData)
mergedData = merge(product1,edu,by.x = "X",by.y = "CountryCode",all = FALSE)
a = intersect(edu$CountryCode,product$X)
mergedData = arrange(mergedData,desc(as.numeric(Gross.domestic.product.2012)))
View(mergedData)
mergedData$Gross.domestic.product.2012 = as.numeric(mergedData$Gross.domestic.product.2012)
View(mergedData)
product1$Gross.domestic.product.2012 = as.numeric(product1$Gross.domestic.product.2012)
View(product)
View(product1)
View(product)
product1 = product[which(product$X != ""),]
class(product1$Gross.domestic.product.2012)
levels(product1$Gross.domestic.product.2012)
table(product$X %in% edu$CountryCode)
table(edu$CountryCode %in% product$X)
a = product1$Gross.domestic.product.2012
b = as.numeric(levels(a))
a[1:5]
b = as.numeric(a)
b[1:5]
View(product)
mergedData = merge(product,edu,by.x = "X", by.y = "CountryCode", all = F, na.rm = T)
View(mergedData)
m = arrange(mergedData, desc(Gross.domestic.product.2012))
View(m)
m = mergedData[order(mergedData$V2,decreasing=T),]
m = mergedData[order(mergedData$Gross.domestic.product.2012,decreasing=T),]
m[13,]
a = as.numeric(as.character(product1$Gross.domestic.product.2012))
View(mergedData)
sum(!is.na(unique(mergedData$X)))
product2 = product
source('G:/Coursera/Getting and Cleaning Data/Test_3/test3.R')
source('G:/Coursera/Getting and Cleaning Data/Test_3/test3.R')
View(merge)
product1 = rename(product, CountryCode=X)
merge = join(product1, edu)
sum(!is.na(unique(merge$Gross.domestic.product.2012)))
mergedData = merge(product1,edu,by.x = "X",by.y = "CountryCode",all = FALSE)
sum(!is.na(unique(mergedData$Gross.domestic.product.2012)))
View(mergedData)
mergedData = merge(product,edu,by.x = "X",by.y = "CountryCode",all = FALSE)
sum(!is.na(unique(mergedData$Gross.domestic.product.2012)))
View(mergedData)
mergedData$Gross.domestic.product.2012 = as.numeric(as.character(mergedData$Gross.domestic.product.2012))
arrange(mergedData, desc(Gross.domestic.product.2012))
source('G:/Coursera/Getting and Cleaning Data/Test_3/test3.R')
ddply(mergedData, .(Income.Group), plyr::summarize, mean = mean(Gross.domestic.product.2012))
ddply(mergedData, .(Income.Group), plyr::summarize, mean = mean(Gross.domestic.product.2012, na.rm = TRUE))
mergedData$group = cut2(mergedData$Gross.domestic.product.2012, g=5)
tb = table(mergedData$group, mergedData$Income.Group)
tb
tb = table(mergedData$Income.Group, mergedData$group)
tb
View(housing)
#Question 1
url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, destfile = "./data/housing.csv")
housing = read.csv("./data/housing.csv")
agricultureLogical = housing$ACR==3 & housing$AGS==6
housing[which(agricultureLogical), 1:3]
housing[1:3,which(agricultureLogical)]
house_agri = housing[which(agricultureLogical),]
View(house_agri)
?jpeg
library(help = jpeg)
?readJPEG
picurl = "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(picurl, destfile = "./data/jeff.jpg")
jeff = readJPEG("./data/jeff.jpg", native = TRUE)
quantile(jeff)
quantile(jeff, probs = c(0.3,0.8))
jeff = readJPEG("./data/getdata-jeff.jpg", native = TRUE)
quantile(jeff, probs = c(0.3,0.8))
